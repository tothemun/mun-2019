"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Osc = function () {
	function Osc(val, rate) {
		var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
		var flip = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

		_classCallCheck(this, Osc);

		this._val = val;
		this._rate = rate;
		this._dir = dir;
		this._flip = flip;

		this._valBase = val;
		this._rateBase = rate;
		this._dirBase = dir;
		this._flipBase = flip;

		this.trigger = false;
		this.triggerTop = false;
		this.triggerBot = false;
	}

	_createClass(Osc, [{
		key: "reset",
		value: function reset() {
			this._val = this._valBase;
			this._rate = this._rateBase;
			this._dir = this._dirBase;
			this._flip = this._flipBase;

			this.trigger = false;
			this.triggerTop = false;
			this.triggerBot = false;
		}
	}, {
		key: "update",
		value: function update(dt) {
			this.trigger = false;
			this.triggerTop = false;
			this.triggerBot = false;
			if (this._dir) {
				if (this._val < 1) {
					this._val += this._rate * dt;
				} else {
					this.trigger = true;
					this.triggerTop = true;
					if (this._flip) {
						this._val = this._val - 1;
					} else {
						this._val = 1 - (this._val - 1);
						this._dir = !this._dir;
					}
				}
			} else {
				if (this._val > 0) {
					this._val -= this._rate * dt;
				} else {
					this.trigger = true;
					this.triggerBot = true;
					if (this._flip) {
						this._val = 1 + this._val;
					} else {
						this._val = -this._val;
						this._dir = !this._dir;
					}
				}
			}
		}
	}, {
		key: "val",
		value: function val(ease) {
			if (ease) {
				return ease(this._val, 0, 1, 1);
			} else {
				return this._val;
			}
		}
	}]);

	return Osc;
}();

exports.default = Osc;